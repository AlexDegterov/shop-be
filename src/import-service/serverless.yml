service: import-service
frameworkVersion: '2'
variablesResolutionMode: 20210326

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  environment:
    BUCKET: ${self:custom.webpack.dotenvVars.BUCKET, env:BUCKET, ''}

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::aws-shop-files"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::aws-shop-files/*"

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    dotenvVars: ${file(configs.js)}

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true

  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: aws-shop-files
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
  
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn: Fn::GetAtt 
            'SQSQueue', 'Arn'

  resources:
    Resources: 
      SQSQueue:
        Type: AWS::SQS::Queue
        Properties: 
          QueueName: ${env:SQS_QUEUE}
      SNSTopic: 
        Type: AWS::SNS::Topic
        Properties: 
          TopicName: ${env:SNS_TOPIC}
      SNSSubscription:
        Type: AWS::SNS::Subscription
        Properties:
          Endpoint: ${env:SNS_ENDPOINT_EMAIL}
          Protocol: email
          TopicArn:
            Ref: SNSTopic