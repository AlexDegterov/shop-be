service: import-service
frameworkVersion: '2'
variablesResolutionMode: 20210326

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  environment:
    BUCKET: ${self:custom.webpack.dotenvVars.BUCKET, env:BUCKET, ''}
    SQSURL: ${cf:product-service-dev.SQSURL} 

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::aws-shop-files"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::aws-shop-files/*"
    - Effect: Allow
      Action: sqs:*
      Resource:
        - "*"

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    dotenvVars: ${file(configs.js)}

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
          authorizer:
            name: basicAuthorizer
            arn: "arn:aws:lambda:eu-west-1:776441098284:function:authorization-service-dev-basicAuthorizer"
            resultTtlSeconds: 0
            identitySource: method.request.header.Authorization
            type: token

  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: aws-shop-files
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true